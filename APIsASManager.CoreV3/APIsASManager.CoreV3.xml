<?xml version="1.0"?>
<doc>
    <assembly>
        <name>APIsASManager.CoreV3</name>
    </assembly>
    <members>
        <member name="M:APIsASManager.CoreV3.Controllers.ASManagerController.ASAccessGranted(System.Int32,System.String,System.String)">
            <summary>
            get access log with access granted msg
            </summary>
            <param name="log_time_type">0-6</param>
            <param name="log_time_start">yyyy/MM/dd HH:mm:ss</param>
            <param name="log_time_end">yyyy/MM/dd HH:mm:ss</param>
            <returns></returns>
        </member>
        <member name="M:APIsASManager.CoreV3.Controllers.ASManagerController.AccessGranted(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="log_time_type">0-6</param>
            <param name="log_time_start">yyyy-MM-dd</param>
            <param name="log_time_end">yyyy-MM-dd HH:mm:ss</param>
            <returns></returns>
        </member>
        <member name="M:APIsASManager.CoreV3.Controllers.LoginController.Get(System.String,System.String)">
            <summary>
            login to get token before execute APIs
            </summary>
            <param name="user"></param>
            <param name="pwd"></param>
            <returns>return token</returns>
        </member>
        <member name="M:APIsASManager.CoreV3.Controllers.RakindaController.RecordData">
            <summary>
            This is MVC, so use InputStream, If you use the web API, you can use the feature , fromBody, to receive
            </summary>
        </member>
        <member name="M:APIsASManager.CoreV3.Controllers.api.RecordController.WeatherForecast">
            <summary>
            return forecast temp.
            </summary>
            <returns></returns>
        </member>
        <member name="M:APIsASManager.CoreV3.Controllers.WeatherForecastController.Get">
            <summary>
            return forecast temp.
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.qrcode" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.device_no" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.base64" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.oper_type" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.temperature" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.userName" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.nonce" -->
        <!-- Badly formed XML comment ignored for member "P:APIsASManager.CoreV3.Models.RecordJson.sign" -->
        <member name="M:APIsASManager.CoreV3.MyClass.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:APIsASManager.CoreV3.MyClass.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:APIsASManager.CoreV3.MyClass.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="M:APIsASManager.CoreV3.MyClass.SwaggerDefaultValues.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
    </members>
</doc>
